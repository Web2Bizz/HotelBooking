version: '3.9'
name: 'bhotel_employee'

services:
  gateway:
    build:
      context: hotel-booking-gateway
      dockerfile: Dockerfile
    ports:
      - '9090:9090'
    restart: always
    volumes:
      - './hotel-booking-gateway/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
    depends_on:
      - app-admin
    networks:
      network:
        ipv4_address: 24.16.1.22

  postgres-hotel:
    image: postgres:latest
    ports:
      - '5439:5432'
    restart: unless-stopped
    volumes:
      - postgres-data-hotel:/var/lib/postgresql/data/
      - './postgres/data-set/hotel:/docker-entrypoint-initdb.d'
    environment:
      - POSTGRES_DB=booking_hotel
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=fuckin_password
      - MAX_LOGIN_ATTEMPTS=0
    networks:
      network:
        ipv4_address: 24.16.1.4

  # postgres-client:
  #   image: postgres:latest
  #   ports:
  #     - '5440:5432'
  #   restart: unless-stopped
  #   volumes:
  #     - postgres-data-client:/var/lib/postgresql/data/
  #     - './postgres/data-set/client:/docker-entrypoint-initdb.d'
  #   environment:
  #     - POSTGRES_DB=booking_client
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=fuckin_password
  #     - MAX_LOGIN_ATTEMPTS=0
  #   networks:
  #     network:
  #       ipv4_address: 24.16.1.5

  app-admin:
    build:
      context: hotel-booking-client-employee
      dockerfile: Dockerfile
    ports:
      - '8000:7699'
    restart: always
    environment:
      - VITE_API_URL=http://87.242.117.193:9090/api
    depends_on:
      - backend-admin
    networks:
      network:
        ipv4_address: 24.16.1.64

  backend-admin:
    build:
      context: hotel-booking-server
      dockerfile: Dockerfile
    ports:
      - '8801:5001'
    restart: always
    environment:
      - NODE_ENV=production
      - CLIENT_URL=http://0.0.0.0:5002
      - POSTGRES_HOST=postgres-hotel
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=fuckin_password
      - POSTGRES_DB=booking_hotel
    depends_on:
      - postgres-hotel
    networks:
      network:
        ipv4_address: 24.16.1.54

  # app-console:
  #   build:
  #     context: bhotel_visiter_console
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - '8802:5501'
  #   restart: always
  #   volumes:
  #     - './packages/:/app/packages'
  #   environment:
  #     - VITE_APP_ADMIN_API=http://87.242.117.193:9090/api
  #     - VITE_APP_TRPC_API=http://87.242.117.193:9090/api
  #   depends_on:
  #     - backend-admin
  #   networks:
  #     network:
  #       ipv4_address: 24.16.2.77

  # app-client:
  #   build:
  #     context: bhotel_visiter_frontend
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - '8803:5170'
  #   restart: always
  #   environment:
  #     - VITE_APP_ADMIN_API=http://87.242.117.193:9090/api
  #     - VITE_APP_TRPC_API=http://87.242.117.193:9090/api
  #   depends_on:
  #     - backend-admin
  #   networks:
  #     network:
  #       ipv4_address: 24.16.2.90

volumes:
  postgres-data-hotel:
  postgres-data-client:

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 24.16.0.0/16
          gateway: 24.16.0.1
