version: '3.9'
name: 'bhotel_employee'

services:
  gateway:
    build:
      context: gateway
      dockerfile: Dockerfile
    ports:
      - 9090:9090
    restart: always
    volumes:
      - './gateway/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
    depends_on:
      - app-admin
      - chatix
      - console-backend
      - app-console
    networks:
      network:
        ipv4_address: 24.16.1.22

  postgres-hotel:
    image: postgres:latest
    ports:
      - 5439:5432
    restart: unless-stopped
    volumes:
      - postgres-data-hotel:/var/lib/postgresql/data/
      - './postgres/data-set/hotel:/docker-entrypoint-initdb.d'
    environment:
      - POSTGRES_DB=booking_hotel
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=fuckin_password
      - MAX_LOGIN_ATTEMPTS=0
    networks:
      network:
        ipv4_address: 24.16.1.4

  postgres-client:
    image: postgres:latest
    ports:
      - 5440:5432
    restart: unless-stopped
    volumes:
      - postgres-data-client:/var/lib/postgresql/data/
      - './postgres/data-set/client:/docker-entrypoint-initdb.d'
    environment:
      - POSTGRES_DB=booking_client
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=fuckin_password
      - MAX_LOGIN_ATTEMPTS=0
    networks:
      network:
        ipv4_address: 24.16.1.5

  app-admin:
    build:
      context: hotel-booking-client-employee
      dockerfile: Dockerfile
    ports:
      - 8000:7699
    restart: always
    environment:
      - VITE_API_URL=http://87.242.117.193:9090/api
    depends_on:
      - backend-admin
    networks:
      network:
        ipv4_address: 24.16.1.64

  backend-admin:
    build:
      context: hotel-booking-server
      dockerfile: Dockerfile
    ports:
      - 8801:5001
    restart: always
    environment:
      - NODE_ENV=production
      - CLIENT_URL=*
      - POSTGRES_HOST=postgres-hotel
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=fuckin_password
      - POSTGRES_DB=booking_hotel
    depends_on:
      - postgres-hotel
    networks:
      network:
        ipv4_address: 24.16.1.54

  console-backend:
    build:
      context: ./
      dockerfile: backend.Dockerfile
    ports:
      - 5001:8556
    restart: always
    environment:
      - NODE_ENV=production
    depends_on:
      - postgres-client
      - backend-admin
    networks:
      network:
        ipv4_address: 24.16.1.55

  app-console:
    build: 
      context: ./
      dockerfile: console.Dockerfile
    ports:
      - 5501:5501
    restart: always
    environment:
      - VITE_APP_ADMIN_API=http://87.242.117.193:9090/api
      - VITE_APP_TRPC_API=http://87.242.117.193:9090/api
    depends_on:
      - backend-admin
    networks:
      network:
        ipv4_address: 24.16.2.77

  app-client:
    build: 
      context: ./
      dockerfile: frontend.Dockerfile
    ports:
      - 5502:5502
    restart: always
    environment:
      - VITE_APP_ADMIN_API=http://87.242.117.193:9090/api
      - VITE_APP_TRPC_API=http://87.242.117.193:9090/api
    depends_on:
      - backend-admin
    networks:
      network:
        ipv4_address: 24.16.2.90

  chatix:
    build:
      context: ./chat-engine
      dockerfile: Dockerfile
    ports:
      - 7777:7777
    restart: always
    depends_on:
      - postgres-client
    environment:
      - PORT=7777
      - NODE_ENV=production
    networks:
      network:
        ipv4_address: 24.16.2.34

volumes:
  postgres-data-hotel:
  postgres-data-client:

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 24.16.0.0/16
          gateway: 24.16.0.1