version: '3.9'
name: 'bhotel_employee'

services:
  gateway:
    build:
      context: hotel-booking-gateway
      dockerfile: Dockerfile
    ports:
      - '9090:9090'
    restart: always
    volumes:
      - './hotel-booking-gateway/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
    depends_on:
      - pgadmin
      - app
    networks:
      network:
        ipv4_address: 27.51.0.22

  postgres:
    image: postgres:latest
    ports:
      - '5432:5432'
    restart: unless-stopped
    volumes:
      - database-data:/var/lib/postgresql/data/
      - './hotel-booking-postgres/data-set:/docker-entrypoint-initdb.d'
    environment:
      - POSTGRES_DB=automation
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - MAX_LOGIN_ATTEMPTS=0
    networks:
      network:
        ipv4_address: 27.51.0.4

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=password
      - PGADMIN_LISTEN_PORT=4789
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - '5050:4789'
    volumes:
      - pgadmin:/root/.
      - './hotel-booking-pgadmin/configs:/var/lib/pgadmin/storage/pgadmin_pgadmin.org'
    networks:
      network:
        ipv4_address: 27.51.0.5

  app:
    build:
      context: hotel-booking-client-employee
      dockerfile: Dockerfile.dev
    ports:
      - '8000:5173'
    restart: always
    depends_on:
      - backend
    networks:
      network:
        ipv4_address: 27.51.0.64

  backend:
    build:
      context: hotel-booking-server
      dockerfile: Dockerfile
    ports:
      - '6000:5001'
    restart: always
    depends_on:
      - postgres
    networks:
      network:
        ipv4_address: 27.51.0.54

volumes:
  database-data:
  pgadmin:

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 27.51.0.0/16
          gateway: 27.51.0.1
